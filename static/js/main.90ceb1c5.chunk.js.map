{"version":3,"sources":["components/NavigationBar/NavigationBar.tsx","App.tsx","Pages/HomePage.tsx","types/Sex.ts","components/PersonLink/PersonLink.tsx","utils/constants.ts","components/PeopleListItem/PeopleListItem.tsx","components/PeopleList/PeopleList.tsx","api.ts","utils/getPreparedPeople.ts","components/Loader/Loader.tsx","Pages/PeoplePage.tsx","Pages/UnknownPage.tsx","Root.tsx","index.tsx"],"names":["NavigationBar","getClassNames","isActive","classNames","className","role","to","App","HomePage","Sex","PersonLink","person","slug","sex","Female","name","PEOPLE_DOWNLOAD_ERROR","TABLE_ATTRIBUTES","PeopleListItem","selectedPersonSlug","born","died","motherName","fatherName","mother","father","PeopleList","people","useParams","map","attribute","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","ok","Error","json","getPreparedPeople","find","Loader","PeoplePage","useState","setPeople","isPeopleLoading","setIsPeopleLoading","hasError","setHasError","isSuccessfullyLoaded","useEffect","fetchtPeople","peopleFromServer","preparedPeople","length","UnknownPage","navigate","useNavigate","timerId","clearTimeout","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"sQAIaA,EAA0B,WACrC,IAAMC,EAAgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACvB,OAAOC,IACL,cACA,CACE,8BAA+BD,GAGpC,EAED,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWH,EACXK,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWH,EACXK,GAAG,UAFL,0BAUT,ECpCYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECJNI,EAAqB,WAChC,OACE,oBAAIJ,UAAU,QAAd,sBAEH,E,4BCJWK,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,SAAYA,EAAZ,WAAYA,CAAZ,MCQaC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEL,GAAE,aAAQK,EAAOC,MACjBR,UAAWD,IACT,CAAE,kBAAmBQ,EAAOE,MAAQJ,EAAIK,SAH5C,SAMGH,EAAOI,MAGb,EClBYC,EAAwB,uBAExBC,EAAmB,CAC9B,OACA,MACA,OACA,OACA,SACA,UCCWC,EAAkC,SAAC,GAK1C,IAHFP,EAGC,EAHDA,OACAQ,EAEC,EAFDA,mBAIAN,EAQEF,EARFE,IACAO,EAOET,EAPFS,KACAC,EAMEV,EANFU,KACAC,EAKEX,EALFW,WACAC,EAIEZ,EAJFY,WACAX,EAGED,EAHFC,KACAY,EAEEb,EAFFa,OACAC,EACEd,EADFc,OAGF,OACE,qBACE,UAAQ,SACRrB,UACED,IAAW,CAAE,yBAA0BS,IAASO,IAHpD,UAME,6BACE,cAAC,EAAD,CAAYR,OAAQA,MAGtB,6BAAKE,IACL,6BAAKO,IACL,6BAAKC,IACL,6BACGG,EACC,cAAC,EAAD,CAAYb,OAAQa,IAEpBF,GD3C0B,MC8C9B,6BACGG,EACC,cAAC,EAAD,CAAYd,OAAQc,IAEpBF,GDlD0B,QCuDnC,EChDYG,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCR,EAAuBS,cAAvBT,mBAER,OACE,wBACE,UAAQ,cACRf,UAAU,uDAFZ,UAIE,gCACE,6BACGa,EAAiBY,KAAI,SAAAC,GACpB,OACE,6BAAKA,GAER,QAIL,gCACGH,EAAOE,KAAI,SAAAlB,GAAM,OAChB,cAAC,EAAD,CACEgB,OAAQA,EACRhB,OAAQA,EAERQ,mBAAoBA,GADfR,EAAOC,KAJE,QAWzB,ECnCKmB,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,CAEM,SAAeI,IAAtB,+B,sDAAO,8GACCL,EAAK,KADN,gCAIoBM,MAAMP,GAJ1B,WAIGQ,EAJH,QAMWC,GANX,sBAOK,IAAIC,MAAMzB,GAPf,wBAUUuB,EAASG,OAVnB,iFAYG,IAAID,MAAMzB,GAZb,2D,kCCRM2B,EAAoB,SAAChB,GAChC,OAAOA,EAAOE,KAAI,SAAAlB,GAChB,OAAO,2BACFA,GADL,IAEEa,OAAQG,EAAOiB,MAAK,SAAApB,GAAM,OAAIA,EAAOT,OAASJ,EAAOW,UAA3B,IAC1BG,OAAQE,EAAOiB,MAAK,SAAAnB,GAAM,OAAIA,EAAOV,OAASJ,EAAOY,UAA3B,KAE7B,GACF,ECRYsB,G,MAAS,kBACpB,qBAAKzC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCKT0C,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOpB,EAAP,KAAeqB,EAAf,KACA,EAA8CD,oBAAS,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,GAAwBF,IAAaF,EAoB3C,OAlBAK,qBAAU,WACRJ,GAAmB,GACnB,IAAMK,EAAY,iDAAG,yHAEclB,IAFd,OAEXmB,EAFW,OAGXC,EAAiBd,EAAkBa,GAEzCR,EAAUS,GALO,gDAOjBL,GAAY,GAPK,yBASjBF,GAAmB,GATF,4EAAH,qDAalBK,GACD,GAAE,IAGD,qCACE,oBAAInD,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG6C,GACC,cAAC,EAAD,IAGDE,GACC,mBAAG,UAAQ,qBAAX,kCAGDE,IAAyB1B,EAAO+B,QAC/B,mBAAG,UAAQ,kBAAX,+CAGDL,GAAwB1B,EAAO+B,QAC9B,cAAC,EAAD,CAAY/B,OAAQA,WAM/B,ECrDYgC,EAAwB,WACnC,IAAMC,EAAWC,cAYjB,OAVAP,qBAAU,WACR,IAAMQ,EAAU1B,YAAW,WACzBwB,EAAS,IACV,GPVyB,KOY1B,OAAO,kBACLG,aAAaD,EADR,CAGR,GAAE,IAGD,oBAAI1D,UAAU,QAAd,2BAEH,ECVY4D,EAAiB,WAC5B,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,uBAAuBC,QAAS,cAAC,EAAD,QAE9C,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU5D,GAAG,IAAI8D,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,YAKlC,ECnBDG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,EAAD,I","file":"static/js/main.90ceb1c5.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Link } from '../../types/Link';\n\nexport const NavigationBar: React.FC = () => {\n  const getClassNames = ({ isActive }: Link) => {\n    return classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    );\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getClassNames}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getClassNames}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavigationBar } from './components/NavigationBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavigationBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export enum Sex {\n  Male = 'm',\n  Female = 'f',\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { Sex } from '../../types/Sex';\n\ninterface Props {\n  person: Person;\n}\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === Sex.Female },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export const REDIRECT_DELAY = 3000;\nexport const PEOPLE_DOWNLOAD_ERROR = 'Something went wrong';\nexport const PARENT_NOT_SET_VALUE = '-';\nexport const TABLE_ATTRIBUTES = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { PARENT_NOT_SET_VALUE } from '../../utils/constants';\n\ninterface Props {\n  people: Person[];\n  person: Person;\n  selectedPersonSlug: string | undefined;\n}\nexport const PeopleListItem: React.FC<Props> = (\n  {\n    person,\n    selectedPersonSlug,\n  },\n) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        classNames({ 'has-background-warning': slug === selectedPersonSlug })\n      }\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || PARENT_NOT_SET_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || PARENT_NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PeopleListItem } from '../PeopleListItem';\nimport { TABLE_ATTRIBUTES } from '../../utils/constants';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { selectedPersonSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_ATTRIBUTES.map(attribute => {\n            return (\n              <th>{attribute}</th>\n            );\n          })}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleListItem\n            people={people}\n            person={person}\n            key={person.slug}\n            selectedPersonSlug={selectedPersonSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types';\nimport { PEOPLE_DOWNLOAD_ERROR } from './utils/constants';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n\n  try {\n    const response = await fetch(API_URL);\n\n    if (!response.ok) {\n      throw new Error(PEOPLE_DOWNLOAD_ERROR);\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw new Error(PEOPLE_DOWNLOAD_ERROR);\n  }\n}\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { PeopleList } from '../components/PeopleList';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { getPreparedPeople } from '../utils/getPreparedPeople';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const isSuccessfullyLoaded = !hasError && !isPeopleLoading;\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n    const fetchtPeople = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n        const preparedPeople = getPreparedPeople(peopleFromServer);\n\n        setPeople(preparedPeople);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsPeopleLoading(false);\n      }\n    };\n\n    fetchtPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading && (\n            <Loader />\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n          )}\n\n          {isSuccessfullyLoaded && !people.length && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {isSuccessfullyLoaded && people.length && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { REDIRECT_DELAY } from '../utils/constants';\n\nexport const UnknownPage: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      navigate('/');\n    }, REDIRECT_DELAY);\n\n    return () => (\n      clearTimeout(timerId)\n    );\n  }, []);\n\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router, Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { UnknownPage } from './Pages/UnknownPage';\n\nexport const Root: React.FC = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":selectedPersonSlug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<UnknownPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}